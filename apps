#!/usr/bin/env bash

# Copyright (C) Harsh Shandilya <me@msfjarvis.dev>
# SPDX-License-Identifier: GPL-3.0-only

# Source common functions
# shellcheck source=common
source "${SCRIPT_DIR}/common"

function findapks() {
  local DIR
  DIR="."
  if [ -n "${1}" ]; then
    DIR="${1}"
  fi
  fd -HI "\.apk$" "${DIR}"
}

function boot_emu() {
  "${ANDROID_SDK_ROOT}"/cmdline-tools/latest/bin/avdmanager create avd --force \
    -n Pixel_XL_API_30 \
    --abi 'google_apis/x86' \
    --package 'system-images;android-30;google_apis;x86' \
    --device 'pixel_xl'
  "${ANDROID_SDK_ROOT}"/emulator/emulator -avd Pixel_XL_API_30 -no-window \
    -gpu swiftshader_indirect \
    -no-snapshot -noaudio -no-boot-anim
}

function wait_for_emu() {
  until [ "$(adb shell getprop sys.boot_completed)" == "1" ]; do
    sleep 5
  done
}

function adbp() {
  local RAW_PACKAGE_PATH
  RAW_PACKAGE_PATH="$(adb shell pm path "${1:?}")"
  if [ "${RAW_PACKAGE_PATH}" != "" ]; then
    mkdir "${1}"
    cd "${1}" || return 1
    while read -r line; do
      path="$(echo "${line}" | cut -d ':' -f 2)"
      package="$(basename "${path}")"
      if [ "${package}" == "base.apk" ]; then
        package="${1}.apk"
      fi
      adb pull "${path}" "${package}"
    done < <(echo "${RAW_PACKAGE_PATH}")
    cd - || return 1
  else
    echoText "Package not found"
  fi
}
