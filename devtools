#!/usr/bin/env bash

# Copyright (C) Harsh Shandilya <me@msfjarvis.dev>
# SPDX-License-Identifier: GPL-3.0-only

# Source common functions
# shellcheck source=common
source "${SCRIPT_DIR}"/common

function getmagisk() {
  local BASE_URL CHANNEL BRANCH JSON_NAME
  BASE_URL="https://raw.githubusercontent.com/topjohnwu/magisk_files"
  CHANNEL="${1}"
  case "${CHANNEL:?}" in
    "stable" | "beta")
      BRANCH="master"
      JSON_NAME="${CHANNEL}"
      ;;
    "canary")
      BRANCH="canary"
      JSON_NAME="release"
      ;;
    *)
      reportWarning "Invalid channel: ${CHANNEL}"
      return 1
      ;;
  esac
  cd /tmp/ || return 1
  curl -sL "${BASE_URL}/${BRANCH}/${JSON_NAME}.json" -o magisk.json || {
    reportError "Failed to download JSON"
    return 1
  }
  cd - || return 1
  echoText "Downloading Magisk $(jq -r .magisk.version /tmp/magisk.json)"
  while read -r link; do
    echo -e "${CL_YLW}Downloading ${link##*/}"
    wget -Nq "${link}"
  done < <(jq -r .[].link /tmp/magisk.json)
  rm /tmp/magisk.json
}

function mkd() {
  tar -cv --exclude README.md --exclude ./.git --exclude LICENCE --exclude LICENSE -f docker.tar ./
}

function bustcfcache() {
  local CF_API_KEY CF_ZONE_ID DATA
  CF_API_KEY="$(pass api/cf | head -n1)"
  CF_ZONE_ID="$(pass api/cf | tail -n1)"
  if [ -z "${1}" ]; then
    DATA='{"purge_everything": true}'
  else
    DATA="{\"files\": [\"${1}\""
    shift
    for arg in "${@}"; do
      DATA="${DATA}, \"${arg}\""
    done
    DATA="${DATA}]}"
  fi
  curl -s -X POST "https://api.cloudflare.com/client/v4/zones/${CF_ZONE_ID}/purge_cache" \
    -H "X-Auth-Email: me@msfjarvis.dev" \
    -H "X-Auth-Key: ${CF_API_KEY}" \
    -H "Content-Type: application/json" \
    --data "${DATA}" | jq .
}

function mkexecjar() {
  local JAR_FILE EXEC_FILE
  JAR_FILE="${1:?}"
  EXEC_FILE="${2}"
  if [ -z "${EXEC_FILE}" ]; then
    EXEC_FILE="${JAR_FILE%.*}"
  fi
  printf "#!/bin/sh\n\nexec java \$JAVA_OPTS -jar \$0 \"\$@\"\n" >"${EXEC_FILE}"
  cat "${JAR_FILE}" >>"${EXEC_FILE}"
}
